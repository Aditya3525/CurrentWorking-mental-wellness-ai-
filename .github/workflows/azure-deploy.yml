name: Deploy to Microsoft Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Install backend dependencies  
      run: |
        cd backend
        npm ci

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: Build backend
      run: |
        cd backend
        npm run build

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test -- --watchAll=false || true

    - name: Run backend tests
      run: |
        cd backend
        npm run test || true

  deploy-frontend:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install and build frontend
      run: |
        cd frontend
        npm ci
        npm run build
      env:
        VITE_API_URL: ${{ secrets.AZURE_BACKEND_URL }}/api

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "/frontend"
        api_location: ""
        output_location: "dist"

  deploy-backend:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install and build backend
      run: |
        cd backend
        npm ci
        npm run build

    - name: Generate Prisma Client
      run: |
        cd backend
        npx prisma generate

    - name: Create deployment package
      run: |
        cd backend
        zip -r ../backend-deploy.zip . -x "node_modules/*" "src/*" "*.ts" "tsconfig.json"

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_APP_SERVICE_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './backend-deploy.zip'

  database-migration:
    needs: deploy-backend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: |
        cd backend
        npm ci

    - name: Run database migrations
      run: |
        cd backend
        npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ secrets.AZURE_DATABASE_URL }}

  notify-deployment:
    needs: [deploy-frontend, deploy-backend, database-migration]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment notification
      run: |
        if [[ "${{ needs.deploy-frontend.result }}" == "success" && "${{ needs.deploy-backend.result }}" == "success" ]]; then
          echo "üéâ Deployment successful!"
          echo "Frontend: ${{ secrets.AZURE_FRONTEND_URL }}"
          echo "Backend: ${{ secrets.AZURE_BACKEND_URL }}"
        else
          echo "‚ùå Deployment failed. Check the logs above."
          exit 1
        fi
